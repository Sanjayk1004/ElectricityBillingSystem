package com.example.demo.controller;

package com.dailycodebuffer.employee.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.Electricity;
import com.example.demo.service.ElectricityService;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/v1/")
public class ElectricityController {

    private final ElectricityService electricityService;

    public ElectricityController(ElectricityService electricityService) {
        this.electricityService = electricityService;
    }

    @PostMapping("/employees")
    public  createEmployee(@RequestBody Electricity electricity) {
        return electricityService.createEmployee(electricity);
    }

    @GetMapping("/employees")
    public List<Electricity> getAllEmployees() {
        return  electricityService.getAllEmployees();
    }

    @DeleteMapping("/employees/{id}")
    public ResponseEntity<Map<String,Boolean>> deleteEmployee(@PathVariable Long id) {
        boolean deleted = false;
        deleted = electricityService.deleteEmployee(id);
        Map<String,Boolean> response = new HashMap<>();
        response.put("deleted", deleted);
        return ResponseEntity.ok(response);
    }

    @GetMapping("/employees/{id}")
    public ResponseEntity<Electricity> getEmployeeById(@PathVariable Long id) {
        Electricity employee = null;
        employee = electricityService.getEmployeeById(id);
        return ResponseEntity.ok(employee);
    }

    @PutMapping("/employees/{id}")
    public ResponseEntity<Electricity> updateEmployee(@PathVariable Long id,
                                                   @RequestBody Employee employee) {
        employee = electricityService.updateEmployee(id, employee);
        return ResponseEntity.ok(employee);
    }

}